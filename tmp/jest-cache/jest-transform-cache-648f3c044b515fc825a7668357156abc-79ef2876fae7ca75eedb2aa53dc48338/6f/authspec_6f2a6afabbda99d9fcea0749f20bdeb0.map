{"file":"/Users/lucaswhelan/financial_advisor/tests/auth.spec.ts","mappings":";;AAAA,gDAA+C;AAG/C,QAAQ,CAAC,aAAa,EAAE,GAAG,EAAE;IAC3B,IAAI,MAAuB,CAAC;IAC5B,SAAS,CAAC,KAAK,IAAI,EAAE;QACnB,MAAM,GAAG,MAAM,IAAA,uBAAW,GAAE,CAAC;IAC/B,CAAC,CAAC,CAAC;IACH,QAAQ,CAAC,KAAK,IAAI,EAAE;QAClB,MAAM,MAAM,CAAC,KAAK,EAAE,CAAC;IACvB,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,wDAAwD,EAAE,KAAK,IAAI,EAAE;QACtE,MAAM,GAAG,GAAG,MAAM,MAAM,CAAC,MAAM,CAAC;YAC9B,MAAM,EAAE,MAAM;YACd,GAAG,EAAE,qBAAqB;YAC1B,OAAO,EAAE,EAAE,KAAK,EAAE,kBAAkB,EAAE,QAAQ,EAAE,aAAa,EAAE;SAChE,CAAC,CAAC;QACH,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACjC,MAAM,IAAI,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;QACxB,MAAM,CAAC,IAAI,CAAC,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;QACrC,MAAM,SAAS,GAAG,GAAG,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;QAC5C,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC5C,kCAAkC;QAClC,+DAA+D;QAC/D,MAAM,CAAC,SAAU,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;IAC7C,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","names":[],"sources":["/Users/lucaswhelan/financial_advisor/tests/auth.spec.ts"],"sourcesContent":["import { buildServer } from '../src/server.js';\nimport type { FastifyInstance } from 'fastify';\n\ndescribe('auth routes', () => {\n  let server: FastifyInstance;\n  beforeAll(async () => {\n    server = await buildServer();\n  });\n  afterAll(async () => {\n    await server.close();\n  });\n\n  it('POST /api/v1/auth/signup returns token and sets cookie', async () => {\n    const res = await server.inject({\n      method: 'POST',\n      url: '/api/v1/auth/signup',\n      payload: { email: 'test@example.com', password: 'password123' },\n    });\n    expect(res.statusCode).toBe(200);\n    const body = res.json();\n    expect(body).toHaveProperty('token');\n    const setCookie = res.headers['set-cookie'];\n    expect(Array.isArray(setCookie)).toBe(true);\n    // Cookie name should be 'refresh'\n    // Use non-null assertion as header presence is validated above\n    expect(setCookie![0]).toMatch(/^refresh=/);\n  });\n});"],"version":3}