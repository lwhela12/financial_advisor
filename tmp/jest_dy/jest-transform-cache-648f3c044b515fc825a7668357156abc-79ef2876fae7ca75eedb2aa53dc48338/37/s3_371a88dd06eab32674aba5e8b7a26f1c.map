{"file":"/Users/lucaswhelan/financial_advisor/src/services/s3.ts","mappings":";;;AAsBA,0CA4BC;AAlDD,kDAI4B;AAC5B,sDAA8C;AAC9C,+BAAoC;AACpC,uCAAkC;AAElC,MAAM,QAAQ,GAAG,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC;AACzC,MAAM,MAAM,GAAG,OAAO,CAAC,GAAG,CAAC,SAAS,IAAI,WAAW,CAAC;AAEvC,QAAA,EAAE,GAAG,IAAI,oBAAQ,CAAC;IAC7B,QAAQ;IACR,MAAM;IACN,WAAW,EAAE;QACX,WAAW,EAAE,OAAO,CAAC,GAAG,CAAC,aAAa,IAAI,EAAE;QAC5C,eAAe,EAAE,OAAO,CAAC,GAAG,CAAC,aAAa,IAAI,EAAE;KACjD;IACD,cAAc,EAAE,CAAC,CAAC,QAAQ;CAC3B,CAAC,CAAC;AAEI,KAAK,UAAU,eAAe,CACnC,MAAc,EACd,IAKC;IAED,MAAM,UAAU,GAAG,IAAA,iBAAM,EAAC,IAAI,IAAI,EAAE,EAAE,YAAY,CAAC,CAAC;IACpD,MAAM,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,IAAI,EAAE,CAAC;IACvD,MAAM,SAAS,GAAG,GAAG,MAAM,IAAI,UAAU,IAAI,IAAA,SAAM,GAAE,IAAI,SAAS,EAAE,CAAC;IAErE,MAAM,KAAK,GAA0B;QACnC,MAAM,EAAE,OAAO,CAAC,GAAG,CAAC,SAAS;QAC7B,GAAG,EAAE,SAAS;QACd,IAAI,EAAE,IAAI,CAAC,MAAM;QACjB,WAAW,EAAE,IAAI,CAAC,QAAQ;QAC1B,aAAa,EAAE,IAAI,CAAC,IAAI;QACxB,GAAG,EAAE,SAAS;KACf,CAAC;IAEF,sDAAsD;IACtD,MAAM,MAAM,GAAG,IAAI,oBAAM,CAAC,EAAE,MAAM,EAAE,UAAE,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,CAAC;IAEzD,MAAM,MAAM,CAAC,IAAI,EAAE,CAAC;IAEpB,OAAO,SAAS,CAAC;AACnB,CAAC","names":[],"sources":["/Users/lucaswhelan/financial_advisor/src/services/s3.ts"],"sourcesContent":["import {\n  S3Client,\n  PutObjectCommand,\n  type PutObjectCommandInput,\n} from '@aws-sdk/client-s3';\nimport { Upload } from '@aws-sdk/lib-storage';\nimport { v4 as uuidv4 } from 'uuid';\nimport { format } from 'date-fns';\n\nconst endpoint = process.env.S3_ENDPOINT;\nconst region = process.env.S3_REGION || 'us-east-1';\n\nexport const s3 = new S3Client({\n  endpoint,\n  region,\n  credentials: {\n    accessKeyId: process.env.S3_ACCESS_KEY || '',\n    secretAccessKey: process.env.S3_SECRET_KEY || '',\n  },\n  forcePathStyle: !!endpoint,\n});\n\nexport async function uploadStatement(\n  userId: string,\n  file: {\n    buffer: Buffer;\n    filename: string;\n    mimetype: string;\n    size: number;\n  },\n) {\n  const datePrefix = format(new Date(), 'yyyy/MM/dd');\n  const extension = file.filename.split('.').pop() ?? '';\n  const objectKey = `${userId}/${datePrefix}/${uuidv4()}.${extension}`;\n\n  const input: PutObjectCommandInput = {\n    Bucket: process.env.S3_BUCKET,\n    Key: objectKey,\n    Body: file.buffer,\n    ContentType: file.mimetype,\n    ContentLength: file.size,\n    ACL: 'private',\n  };\n\n  // Use high-level Upload helper for multipart for >5MB\n  const upload = new Upload({ client: s3, params: input });\n\n  await upload.done();\n\n  return objectKey;\n}\n"],"version":3}