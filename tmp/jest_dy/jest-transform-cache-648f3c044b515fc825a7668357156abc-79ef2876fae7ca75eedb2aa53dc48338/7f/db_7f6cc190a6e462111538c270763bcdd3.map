{"file":"/Users/lucaswhelan/financial_advisor/src/services/db.ts","mappings":";AAAA,cAAc;;;AAEd;;;;;;;;GAQG;AAEH,IAAI,uBAA4B,CAAC,CAAC,yDAAyD;AAE3F,IAAI,CAAC;IACH,gGAAgG;IAChG,uBAAuB,GAAG,OAAO,CAAC,gBAAgB,CAAC,CAAC,YAAY,CAAC;AACnE,CAAC;AAAC,MAAM,CAAC;IACP,uBAAuB,GAAG,MAAM,mBAAmB;QACjD;YACE,MAAM,IAAI,KAAK,CAAC,sDAAsD,CAAC,CAAC;QAC1E,CAAC;KACF,CAAC;AACJ,CAAC;AAED,MAAM,eAAe,GAAG,UAA8B,CAAC,CAAC,yDAAyD;AAEjH,6DAA6D;AAC7D,aAAa;AACA,QAAA,MAAM,GAAG,eAAe,CAAC,MAAM,IAAI,IAAI,uBAAuB,EAAE,CAAC;AAE9E,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,EAAE,CAAC;IAC1C,eAAe,CAAC,MAAM,GAAG,cAAM,CAAC;AAClC,CAAC;AAED,kBAAe,cAAM,CAAC","names":[],"sources":["/Users/lucaswhelan/financial_advisor/src/services/db.ts"],"sourcesContent":["// @ts-nocheck\n\n/*\n * Very light‑weight Prisma client wrapper.\n *\n * The real generated client may not be present when the test suite is run in\n * CI.  To ensure the server can still boot we try to load it dynamically using\n * `require`.  If it isn’t available we fall back to a stub that throws a clear\n * error when used – none of the current tests touch the database, so this is\n * acceptable for now.\n */\n\nlet PrismaClientConstructor: any; // eslint-disable-line @typescript-eslint/no-explicit-any\n\ntry {\n  // eslint-disable-next-line @typescript-eslint/no-var-requires,import/no-extraneous-dependencies\n  PrismaClientConstructor = require('@prisma/client').PrismaClient;\n} catch {\n  PrismaClientConstructor = class MissingPrismaClient {\n    constructor() {\n      throw new Error('Prisma client not generated – run \"prisma generate\".');\n    }\n  };\n}\n\nconst globalForPrisma = globalThis as { prisma?: any }; // eslint-disable-line @typescript-eslint/no-explicit-any\n\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nexport const prisma = globalForPrisma.prisma ?? new PrismaClientConstructor();\n\nif (process.env.NODE_ENV !== 'production') {\n  globalForPrisma.prisma = prisma;\n}\n\nexport default prisma;\n"],"version":3}