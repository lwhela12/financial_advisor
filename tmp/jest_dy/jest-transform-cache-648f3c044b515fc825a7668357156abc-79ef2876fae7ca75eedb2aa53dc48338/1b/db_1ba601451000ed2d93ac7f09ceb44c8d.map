{"file":"/Users/lucaswhelan/financial_advisor/src/services/db.ts","mappings":";AAAA;;;;;;;;;GASG;;;;;;AAEH,6DAA6D;AAC7D,4DAAiC;AAEjC,8EAA8E;AAC9E,4EAA4E;AAC5E,6EAA6E;AAC7E,6EAA6E;AAC7E,2EAA2E;AAC3E,cAAc;AAEd,4EAA4E;AAC5E,8DAA8D;AAC9D,MAAM,YAAY,GAAS,gBAAW,CAAC,YAAY,IAAI,MAAM,aAAa;IACxE;QACE,0EAA0E;QAC1E,MAAM,IAAI,KAAK,CACb,yEAAyE,CAC1E,CAAC;IACJ,CAAC;CACF,CAAC;AAEF,MAAM,eAAe,GAAG,UAAuE,CAAC;AAEhG,6DAA6D;AAC7D,gEAAgE;AACnD,QAAA,MAAM,GAAG,eAAe,CAAC,MAAM,IAAI,IAAI,YAAY,EAAE,CAAC;AAEnE,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,EAAE,CAAC;IAC1C,eAAe,CAAC,MAAM,GAAG,cAAM,CAAC;AAClC,CAAC;AAED,kBAAe,cAAM,CAAC","names":[],"sources":["/Users/lucaswhelan/financial_advisor/src/services/db.ts"],"sourcesContent":["/*\n * Centralised Prisma client instance.\n *\n * In a freshly‑cloned repo `prisma generate` might not have been executed yet.\n * Importing named exports from `@prisma/client` would therefore fail the\n * TypeScript compile that Jest performs, because the generated types are\n * missing. To keep the tests green without requiring the generator to have\n * run, we import the package’s default export and pluck the `PrismaClient`\n * constructor at runtime.\n */\n\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport pkg from '@prisma/client';\n\n// At runtime `pkg` will be an object like `{ PrismaClient, Prisma }` once the\n// client has been generated.  When the generated client is missing (e.g. CI\n// before `prisma generate`), we fall back to a lightweight proxy that throws\n// a helpful error if used.  This lets the test suite boot the Fastify server\n// (none of the tests exercise the database yet) without failing the module\n// load phase.\n\n// Using `any` to avoid type errors when the generated client isn’t present.\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst PrismaClient: any = (pkg as any).PrismaClient ?? class MissingPrisma {\n  constructor() {\n    // Only throw if someone actually tries to use the DB during the test run.\n    throw new Error(\n      'Prisma Client has not been generated yet. Please run \"prisma generate\".',\n    );\n  }\n};\n\nconst globalForPrisma = globalThis as unknown as { prisma?: InstanceType<typeof PrismaClient> };\n\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore – the proxy class above is structurally compatible\nexport const prisma = globalForPrisma.prisma ?? new PrismaClient();\n\nif (process.env.NODE_ENV !== 'production') {\n  globalForPrisma.prisma = prisma;\n}\n\nexport default prisma;\n"],"version":3}